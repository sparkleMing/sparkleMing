package com.sumixer.ys.api.dao;

import com.sumixer.ys.api.entity.YsStoreNotice;
import com.sumixer.ys.api.entity.YsStoreNoticeExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface YsStoreNoticeMapper {
    @SelectProvider(type=YsStoreNoticeSqlProvider.class, method="countByExample")
    long countByExample(YsStoreNoticeExample example);

    @DeleteProvider(type=YsStoreNoticeSqlProvider.class, method="deleteByExample")
    int deleteByExample(YsStoreNoticeExample example);

    @Delete({
        "delete from ys_store_notice",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    @Insert({
        "insert into ys_store_notice (notice_id, store_id, ",
        "content, update_time)",
        "values (#{noticeId,jdbcType=VARCHAR}, #{storeId,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(YsStoreNotice record);

    @InsertProvider(type=YsStoreNoticeSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(YsStoreNotice record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_store_notice
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsStoreNotice selectOneByExample(YsStoreNoticeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_store_notice
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsStoreNotice selectOneByExampleSelective(@Param("example") YsStoreNoticeExample example, @Param("selective") YsStoreNotice.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_store_notice
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    List<YsStoreNotice> selectByExampleSelective(@Param("example") YsStoreNoticeExample example, @Param("selective") YsStoreNotice.Column ... selective);

    @SelectProvider(type=YsStoreNoticeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="notice_id", property="noticeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="store_id", property="storeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<YsStoreNotice> selectByExample(YsStoreNoticeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_store_notice
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsStoreNotice selectByPrimaryKeySelective(@Param("id") Integer id, @Param("selective") YsStoreNotice.Column ... selective);

    @Select({
        "select",
        "id, notice_id, store_id, content, update_time",
        "from ys_store_notice",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="notice_id", property="noticeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="store_id", property="storeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    YsStoreNotice selectByPrimaryKey(Integer id);

    @UpdateProvider(type=YsStoreNoticeSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") YsStoreNotice record, @Param("example") YsStoreNoticeExample example);

    @UpdateProvider(type=YsStoreNoticeSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") YsStoreNotice record, @Param("example") YsStoreNoticeExample example);

    @UpdateProvider(type=YsStoreNoticeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(YsStoreNotice record);

    @Update({
        "update ys_store_notice",
        "set notice_id = #{noticeId,jdbcType=VARCHAR},",
          "store_id = #{storeId,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(YsStoreNotice record);
}