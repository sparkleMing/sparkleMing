package com.sumixer.ys.api.dao;

import com.sumixer.ys.api.entity.YsGoods;
import com.sumixer.ys.api.entity.YsGoodsExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface YsGoodsMapper {
    @SelectProvider(type=YsGoodsSqlProvider.class, method="countByExample")
    long countByExample(YsGoodsExample example);

    @DeleteProvider(type=YsGoodsSqlProvider.class, method="deleteByExample")
    int deleteByExample(YsGoodsExample example);

    @Delete({
        "delete from ys_goods",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    @Insert({
        "insert into ys_goods (goods_id, category_id, ",
        "goods_name, unit, ",
        "keyword, description, ",
        "cost_price, sale_price, ",
        "market_price, stock, ",
        "low_stock, publish, ",
        "picture, put_time)",
        "values (#{goodsId,jdbcType=VARCHAR}, #{categoryId,jdbcType=VARCHAR}, ",
        "#{goodsName,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, ",
        "#{keyword,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, ",
        "#{costPrice,jdbcType=DOUBLE}, #{salePrice,jdbcType=DOUBLE}, ",
        "#{marketPrice,jdbcType=DOUBLE}, #{stock,jdbcType=DOUBLE}, ",
        "#{lowStock,jdbcType=DOUBLE}, #{publish,jdbcType=INTEGER}, ",
        "#{picture,jdbcType=VARCHAR}, #{putTime,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(YsGoods record);

    @InsertProvider(type=YsGoodsSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(YsGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsGoods selectOneByExample(YsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsGoods selectOneByExampleSelective(@Param("example") YsGoodsExample example, @Param("selective") YsGoods.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    List<YsGoods> selectByExampleSelective(@Param("example") YsGoodsExample example, @Param("selective") YsGoods.Column ... selective);

    @SelectProvider(type=YsGoodsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR),
        @Result(column="category_id", property="categoryId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="unit", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="keyword", property="keyword", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="cost_price", property="costPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="sale_price", property="salePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="stock", property="stock", jdbcType=JdbcType.DOUBLE),
        @Result(column="low_stock", property="lowStock", jdbcType=JdbcType.DOUBLE),
        @Result(column="publish", property="publish", jdbcType=JdbcType.INTEGER),
        @Result(column="picture", property="picture", jdbcType=JdbcType.VARCHAR),
        @Result(column="put_time", property="putTime", jdbcType=JdbcType.VARCHAR)
    })
    List<YsGoods> selectByExample(YsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsGoods selectByPrimaryKeySelective(@Param("id") Integer id, @Param("selective") YsGoods.Column ... selective);

    @Select({
        "select",
        "id, goods_id, category_id, goods_name, unit, keyword, description, cost_price, ",
        "sale_price, market_price, stock, low_stock, publish, picture, put_time",
        "from ys_goods",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="goods_id", property="goodsId", jdbcType=JdbcType.VARCHAR),
        @Result(column="category_id", property="categoryId", jdbcType=JdbcType.VARCHAR),
        @Result(column="goods_name", property="goodsName", jdbcType=JdbcType.VARCHAR),
        @Result(column="unit", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="keyword", property="keyword", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="cost_price", property="costPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="sale_price", property="salePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="market_price", property="marketPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="stock", property="stock", jdbcType=JdbcType.DOUBLE),
        @Result(column="low_stock", property="lowStock", jdbcType=JdbcType.DOUBLE),
        @Result(column="publish", property="publish", jdbcType=JdbcType.INTEGER),
        @Result(column="picture", property="picture", jdbcType=JdbcType.VARCHAR),
        @Result(column="put_time", property="putTime", jdbcType=JdbcType.VARCHAR)
    })
    YsGoods selectByPrimaryKey(Integer id);

    @UpdateProvider(type=YsGoodsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") YsGoods record, @Param("example") YsGoodsExample example);

    @UpdateProvider(type=YsGoodsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") YsGoods record, @Param("example") YsGoodsExample example);

    @UpdateProvider(type=YsGoodsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(YsGoods record);

    @Update({
        "update ys_goods",
        "set goods_id = #{goodsId,jdbcType=VARCHAR},",
          "category_id = #{categoryId,jdbcType=VARCHAR},",
          "goods_name = #{goodsName,jdbcType=VARCHAR},",
          "unit = #{unit,jdbcType=VARCHAR},",
          "keyword = #{keyword,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=VARCHAR},",
          "cost_price = #{costPrice,jdbcType=DOUBLE},",
          "sale_price = #{salePrice,jdbcType=DOUBLE},",
          "market_price = #{marketPrice,jdbcType=DOUBLE},",
          "stock = #{stock,jdbcType=DOUBLE},",
          "low_stock = #{lowStock,jdbcType=DOUBLE},",
          "publish = #{publish,jdbcType=INTEGER},",
          "picture = #{picture,jdbcType=VARCHAR},",
          "put_time = #{putTime,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(YsGoods record);
}