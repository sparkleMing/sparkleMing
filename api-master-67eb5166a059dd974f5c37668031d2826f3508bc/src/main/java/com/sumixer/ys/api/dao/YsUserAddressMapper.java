package com.sumixer.ys.api.dao;

import com.sumixer.ys.api.entity.YsUserAddress;
import com.sumixer.ys.api.entity.YsUserAddressExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface YsUserAddressMapper {
    @SelectProvider(type=YsUserAddressSqlProvider.class, method="countByExample")
    long countByExample(YsUserAddressExample example);

    @DeleteProvider(type=YsUserAddressSqlProvider.class, method="deleteByExample")
    int deleteByExample(YsUserAddressExample example);

    @Delete({
        "delete from ys_user_address",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    @Insert({
        "insert into ys_user_address (address_id, `name`, ",
        "phone, address, ",
        "`location`, user_id, ",
        "is_default)",
        "values (#{addressId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{location,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{isDefault,jdbcType=INTEGER})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(YsUserAddress record);

    @InsertProvider(type=YsUserAddressSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(YsUserAddress record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_user_address
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsUserAddress selectOneByExample(YsUserAddressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_user_address
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsUserAddress selectOneByExampleSelective(@Param("example") YsUserAddressExample example, @Param("selective") YsUserAddress.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_user_address
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    List<YsUserAddress> selectByExampleSelective(@Param("example") YsUserAddressExample example, @Param("selective") YsUserAddress.Column ... selective);

    @SelectProvider(type=YsUserAddressSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="address_id", property="addressId", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="location", property="location", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_default", property="isDefault", jdbcType=JdbcType.INTEGER)
    })
    List<YsUserAddress> selectByExample(YsUserAddressExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_user_address
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsUserAddress selectByPrimaryKeySelective(@Param("id") Integer id, @Param("selective") YsUserAddress.Column ... selective);

    @Select({
        "select",
        "id, address_id, `name`, phone, address, `location`, user_id, is_default",
        "from ys_user_address",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="address_id", property="addressId", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="location", property="location", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_default", property="isDefault", jdbcType=JdbcType.INTEGER)
    })
    YsUserAddress selectByPrimaryKey(Integer id);

    @UpdateProvider(type=YsUserAddressSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") YsUserAddress record, @Param("example") YsUserAddressExample example);

    @UpdateProvider(type=YsUserAddressSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") YsUserAddress record, @Param("example") YsUserAddressExample example);

    @UpdateProvider(type=YsUserAddressSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(YsUserAddress record);

    @Update({
        "update ys_user_address",
        "set address_id = #{addressId,jdbcType=VARCHAR},",
          "`name` = #{name,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "`location` = #{location,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "is_default = #{isDefault,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(YsUserAddress record);
}