package com.sumixer.ys.api.dao;

import com.sumixer.ys.api.entity.YsOrder;
import com.sumixer.ys.api.entity.YsOrderExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface YsOrderMapper {
    @SelectProvider(type=YsOrderSqlProvider.class, method="countByExample")
    long countByExample(YsOrderExample example);

    @DeleteProvider(type=YsOrderSqlProvider.class, method="deleteByExample")
    int deleteByExample(YsOrderExample example);

    @Delete({
        "delete from ys_order",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    @Insert({
        "insert into ys_order (order_id, pay_type, ",
        "note, create_time, ",
        "pay_time, price, ",
        "dicount, pay_price, ",
        "pay_status, send, ",
        "address_id, user_id, ",
        "store_id, send_money)",
        "values (#{orderId,jdbcType=VARCHAR}, #{payType,jdbcType=INTEGER}, ",
        "#{note,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{payTime,jdbcType=TIMESTAMP}, #{price,jdbcType=DOUBLE}, ",
        "#{dicount,jdbcType=DOUBLE}, #{payPrice,jdbcType=DOUBLE}, ",
        "#{payStatus,jdbcType=INTEGER}, #{send,jdbcType=INTEGER}, ",
        "#{addressId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{storeId,jdbcType=VARCHAR}, #{sendMoney,jdbcType=DOUBLE})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(YsOrder record);

    @InsertProvider(type=YsOrderSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(YsOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_order
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsOrder selectOneByExample(YsOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_order
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsOrder selectOneByExampleSelective(@Param("example") YsOrderExample example, @Param("selective") YsOrder.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_order
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    List<YsOrder> selectByExampleSelective(@Param("example") YsOrderExample example, @Param("selective") YsOrder.Column ... selective);

    @SelectProvider(type=YsOrderSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_type", property="payType", jdbcType=JdbcType.INTEGER),
        @Result(column="note", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="dicount", property="dicount", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_price", property="payPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_status", property="payStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="send", property="send", jdbcType=JdbcType.INTEGER),
        @Result(column="address_id", property="addressId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="store_id", property="storeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_money", property="sendMoney", jdbcType=JdbcType.DOUBLE)
    })
    List<YsOrder> selectByExample(YsOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_order
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsOrder selectByPrimaryKeySelective(@Param("id") Integer id, @Param("selective") YsOrder.Column ... selective);

    @Select({
        "select",
        "id, order_id, pay_type, note, create_time, pay_time, price, dicount, pay_price, ",
        "pay_status, send, address_id, user_id, store_id, send_money",
        "from ys_order",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_type", property="payType", jdbcType=JdbcType.INTEGER),
        @Result(column="note", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="dicount", property="dicount", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_price", property="payPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_status", property="payStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="send", property="send", jdbcType=JdbcType.INTEGER),
        @Result(column="address_id", property="addressId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="store_id", property="storeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_money", property="sendMoney", jdbcType=JdbcType.DOUBLE)
    })
    YsOrder selectByPrimaryKey(Integer id);

    @UpdateProvider(type=YsOrderSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") YsOrder record, @Param("example") YsOrderExample example);

    @UpdateProvider(type=YsOrderSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") YsOrder record, @Param("example") YsOrderExample example);

    @UpdateProvider(type=YsOrderSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(YsOrder record);

    @Update({
        "update ys_order",
        "set order_id = #{orderId,jdbcType=VARCHAR},",
          "pay_type = #{payType,jdbcType=INTEGER},",
          "note = #{note,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "pay_time = #{payTime,jdbcType=TIMESTAMP},",
          "price = #{price,jdbcType=DOUBLE},",
          "dicount = #{dicount,jdbcType=DOUBLE},",
          "pay_price = #{payPrice,jdbcType=DOUBLE},",
          "pay_status = #{payStatus,jdbcType=INTEGER},",
          "send = #{send,jdbcType=INTEGER},",
          "address_id = #{addressId,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "store_id = #{storeId,jdbcType=VARCHAR},",
          "send_money = #{sendMoney,jdbcType=DOUBLE}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(YsOrder record);
}