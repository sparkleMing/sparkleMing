package com.sumixer.ys.api.dao;

import com.sumixer.ys.api.entity.YsUser;
import com.sumixer.ys.api.entity.YsUserExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface YsUserMapper {
    @SelectProvider(type=YsUserSqlProvider.class, method="countByExample")
    long countByExample(YsUserExample example);

    @DeleteProvider(type=YsUserSqlProvider.class, method="deleteByExample")
    int deleteByExample(YsUserExample example);

    @Delete({
        "delete from ys_user",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    @Insert({
        "insert into ys_user (user_id, nickname, ",
        "phone, `password`, ",
        "last_login_time, last_login_ip, ",
        "create_time, score, ",
        "`status`, wallet, openid)",
        "values (#{userId,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
        "#{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{score,jdbcType=INTEGER}, ",
        "#{status,jdbcType=INTEGER}, #{wallet,jdbcType=DOUBLE}, #{openid,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(YsUser record);

    @InsertProvider(type=YsUserSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(YsUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_user
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsUser selectOneByExample(YsUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_user
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsUser selectOneByExampleSelective(@Param("example") YsUserExample example, @Param("selective") YsUser.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_user
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    List<YsUser> selectByExampleSelective(@Param("example") YsUserExample example, @Param("selective") YsUser.Column ... selective);

    @SelectProvider(type=YsUserSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="nickname", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_login_time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="last_login_ip", property="lastLoginIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="score", property="score", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="wallet", property="wallet", jdbcType=JdbcType.DOUBLE),
        @Result(column="openid", property="openid", jdbcType=JdbcType.VARCHAR)
    })
    List<YsUser> selectByExample(YsUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_user
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsUser selectByPrimaryKeySelective(@Param("id") Integer id, @Param("selective") YsUser.Column ... selective);

    @Select({
        "select",
        "id, user_id, nickname, phone, `password`, last_login_time, last_login_ip, create_time, ",
        "score, `status`, wallet, openid",
        "from ys_user",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="nickname", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_login_time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="last_login_ip", property="lastLoginIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="score", property="score", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="wallet", property="wallet", jdbcType=JdbcType.DOUBLE),
        @Result(column="openid", property="openid", jdbcType=JdbcType.VARCHAR)
    })
    YsUser selectByPrimaryKey(Integer id);

    @UpdateProvider(type=YsUserSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") YsUser record, @Param("example") YsUserExample example);

    @UpdateProvider(type=YsUserSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") YsUser record, @Param("example") YsUserExample example);

    @UpdateProvider(type=YsUserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(YsUser record);

    @Update({
        "update ys_user",
        "set user_id = #{userId,jdbcType=VARCHAR},",
          "nickname = #{nickname,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "`password` = #{password,jdbcType=VARCHAR},",
          "last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},",
          "last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "score = #{score,jdbcType=INTEGER},",
          "`status` = #{status,jdbcType=INTEGER},",
          "wallet = #{wallet,jdbcType=DOUBLE},",
          "openid = #{openid,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(YsUser record);
}