package com.sumixer.ys.api.dao;

import com.sumixer.ys.api.entity.YsWxStoreSlide;
import com.sumixer.ys.api.entity.YsWxStoreSlideExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface YsWxStoreSlideMapper {
    @SelectProvider(type=YsWxStoreSlideSqlProvider.class, method="countByExample")
    long countByExample(YsWxStoreSlideExample example);

    @DeleteProvider(type=YsWxStoreSlideSqlProvider.class, method="deleteByExample")
    int deleteByExample(YsWxStoreSlideExample example);

    @Delete({
        "delete from ys_wx_store_slide",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    @Insert({
        "insert into ys_wx_store_slide (slide_id, slide_url, ",
        "update_time, ys_store_id)",
        "values (#{slideId,jdbcType=VARCHAR}, #{slideUrl,jdbcType=VARCHAR}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{ysStoreId,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(YsWxStoreSlide record);

    @InsertProvider(type=YsWxStoreSlideSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(YsWxStoreSlide record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_wx_store_slide
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsWxStoreSlide selectOneByExample(YsWxStoreSlideExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_wx_store_slide
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsWxStoreSlide selectOneByExampleSelective(@Param("example") YsWxStoreSlideExample example, @Param("selective") YsWxStoreSlide.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_wx_store_slide
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    List<YsWxStoreSlide> selectByExampleSelective(@Param("example") YsWxStoreSlideExample example, @Param("selective") YsWxStoreSlide.Column ... selective);

    @SelectProvider(type=YsWxStoreSlideSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="slide_id", property="slideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="slide_url", property="slideUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ys_store_id", property="ysStoreId", jdbcType=JdbcType.VARCHAR)
    })
    List<YsWxStoreSlide> selectByExample(YsWxStoreSlideExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ys_wx_store_slide
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    YsWxStoreSlide selectByPrimaryKeySelective(@Param("id") Integer id, @Param("selective") YsWxStoreSlide.Column ... selective);

    @Select({
        "select",
        "id, slide_id, slide_url, update_time, ys_store_id",
        "from ys_wx_store_slide",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="slide_id", property="slideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="slide_url", property="slideUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ys_store_id", property="ysStoreId", jdbcType=JdbcType.VARCHAR)
    })
    YsWxStoreSlide selectByPrimaryKey(Integer id);

    @UpdateProvider(type=YsWxStoreSlideSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") YsWxStoreSlide record, @Param("example") YsWxStoreSlideExample example);

    @UpdateProvider(type=YsWxStoreSlideSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") YsWxStoreSlide record, @Param("example") YsWxStoreSlideExample example);

    @UpdateProvider(type=YsWxStoreSlideSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(YsWxStoreSlide record);

    @Update({
        "update ys_wx_store_slide",
        "set slide_id = #{slideId,jdbcType=VARCHAR},",
          "slide_url = #{slideUrl,jdbcType=VARCHAR},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "ys_store_id = #{ysStoreId,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(YsWxStoreSlide record);
}